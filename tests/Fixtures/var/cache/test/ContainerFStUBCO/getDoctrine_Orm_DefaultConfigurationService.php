<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'doctrine.orm.default_configuration' shared service.

$this->privates['doctrine.orm.default_configuration'] = $instance = new \Doctrine\ORM\Configuration();

$a = ($this->privates['doctrine.system_cache_provider'] ?? $this->load('getDoctrine_SystemCacheProviderService.php'));

$instance->setEntityNamespaces(['AppBundle' => 'Tests\\Fixtures\\AppBundle\\Entity']);
$instance->setMetadataCacheImpl($a);
$instance->setQueryCacheImpl($a);
$instance->setResultCacheImpl(($this->privates['doctrine.result_cache_provider'] ?? $this->load('getDoctrine_ResultCacheProviderService.php')));
$instance->setMetadataDriverImpl(($this->privates['doctrine.orm.default_metadata_driver'] ?? $this->load('getDoctrine_Orm_DefaultMetadataDriverService.php')));
$instance->setProxyDir(($this->targetDir.''.'/doctrine/orm/Proxies'));
$instance->setProxyNamespace('Proxies');
$instance->setAutoGenerateProxyClasses(true);
$instance->setClassMetadataFactoryName('Doctrine\\ORM\\Mapping\\ClassMetadataFactory');
$instance->setDefaultRepositoryClassName('Doctrine\\ORM\\EntityRepository');
$instance->setNamingStrategy(($this->privates['doctrine.orm.naming_strategy.underscore'] ?? ($this->privates['doctrine.orm.naming_strategy.underscore'] = new \Doctrine\ORM\Mapping\UnderscoreNamingStrategy())));
$instance->setQuoteStrategy(($this->privates['doctrine.orm.quote_strategy.default'] ?? ($this->privates['doctrine.orm.quote_strategy.default'] = new \Doctrine\ORM\Mapping\DefaultQuoteStrategy())));
$instance->setEntityListenerResolver(($this->privates['doctrine.orm.default_entity_listener_resolver'] ?? ($this->privates['doctrine.orm.default_entity_listener_resolver'] = new \Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver($this))));
$instance->setRepositoryFactory(($this->privates['doctrine.orm.container_repository_factory'] ?? $this->load('getDoctrine_Orm_ContainerRepositoryFactoryService.php')));

return $instance;
